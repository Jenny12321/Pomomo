
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TimerTask;
import java.util.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.applet.Applet;
import java.applet.AudioClip;
import java.net.URL;
import java.awt.Image;
import javax.imageio.ImageIO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jenny_37h68qm
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    //make illegal global variables
    public Timer timer = new Timer();
    int status = 0; //0 = off, 1 = on
    Icon offAlarm = new ImageIcon("alarmOff.png");
    Icon onAlarm = new ImageIcon("alarmOn.png");
    int nSeconds = 60;
    int workSec = 25 * 60;
    int restSec = 5 * 60;
    boolean isWork = true;
    boolean alarmOn = false;
    int firstRun = 0;
    int totalSec = 0;
    int alarmTrip = 0;
    AudioClip clip;
    URL url;
    boolean isPlaying = false;


    public MainFrame() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        frameSetTime.getContentPane().setBackground(Color.WHITE);

    }

    private class UpdateUITask extends TimerTask {

        @Override
        public void run() {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    //if button is off
                    if (status == 0) {
                        timeLabel.setText("00:00:00");
                    } //if button is on
                    else if (status == 1) {
                        if (nSeconds > 0) {
                            nSeconds--;
                            //change tomato colours
                            if (nSeconds == (2 * totalSec) / 3) {    //first third (orange)
                                lblTom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomatoyellow.png")));
                            } else if (nSeconds == totalSec / 3) {    //second third (red)
                                lblTom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomatored.png")));
                            }
                            int hours = nSeconds / 3600;
                            int minutes = (nSeconds % 3600) / 60;
                            int seconds = nSeconds % 60;
                            String hr, sec, min;
                            System.out.println(nSeconds);
                            if (seconds < 10) {
                                sec = "0" + seconds;
                            } else {
                                sec = String.valueOf(seconds);
                            }
                            if (minutes < 10) {
                                min = "0" + minutes;
                            } else {
                                min = String.valueOf(minutes);
                            }
                            if (hours < 10) {
                                hr = "0" + hours;
                            } else {
                                hr = String.valueOf(hours);
                            }

                            // timeLabel.setText(String.valueOf(nSeconds--));
                            timeLabel.setText("" + hr + ":" + min + ":" + sec);
                        } else if (alarmTrip == 0) {  //if timer has reached 0 (alarm is ringing)
                            alarmTrip = 1;
                            System.out.println("nSeconds rn is " + nSeconds);
                            if (isWork) {
                                System.out.println("isWork was " + isWork);
                                isWork = false;
                                System.out.println("Changed to " + isWork);
                            } else {
                                System.out.println("isWork was " + isWork);
                                isWork = true;
                                System.out.println("Changed to " + isWork);
                            }
                            //music files
                            Toolkit.getDefaultToolkit().beep();
                        } else {
                            //music files
                            Toolkit.getDefaultToolkit().beep();
                        }

                    }
                }
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameSetTime = new javax.swing.JFrame();
        jLabel14 = new javax.swing.JLabel();
        txtH2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtH3 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtM2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtM3 = new javax.swing.JTextField();
        txtS3 = new javax.swing.JTextField();
        txtS2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnSet = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        btnOnOff = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        lblStat = new javax.swing.JLabel();
        btnSetTime = new javax.swing.JButton();
        lblTom = new javax.swing.JLabel();
        lblWorkFor = new javax.swing.JLabel();
        lblRestFor = new javax.swing.JLabel();
        btnrain = new javax.swing.JRadioButton();
        btnclassical = new javax.swing.JRadioButton();
        btncoffeeshop = new javax.swing.JRadioButton();
        btnwn = new javax.swing.JRadioButton();
        btnnature = new javax.swing.JRadioButton();
        btnoff = new javax.swing.JRadioButton();

        frameSetTime.setMinimumSize(new java.awt.Dimension(275, 175));
        frameSetTime.setPreferredSize(new java.awt.Dimension(277, 102));

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(24, 133, 147));
        jLabel14.setText("Work:");

        txtH2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtH2.setForeground(new java.awt.Color(51, 51, 51));
        txtH2.setText("00");
        txtH2.setBorder(null);
        txtH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtH2ActionPerformed(evt);
            }
        });
        txtH2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtH2KeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("h");

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("h");

        txtH3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtH3.setForeground(new java.awt.Color(51, 51, 51));
        txtH3.setText("00");
        txtH3.setBorder(null);
        txtH3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtH3ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(24, 133, 147));
        jLabel17.setText("Rest:");

        txtM2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtM2.setForeground(new java.awt.Color(51, 51, 51));
        txtM2.setText("25");
        txtM2.setBorder(null);
        txtM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtM2ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("m");

        jLabel19.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("m");

        txtM3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtM3.setForeground(new java.awt.Color(51, 51, 51));
        txtM3.setText("05");
        txtM3.setBorder(null);
        txtM3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtM3ActionPerformed(evt);
            }
        });

        txtS3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtS3.setForeground(new java.awt.Color(51, 51, 51));
        txtS3.setText("00");
        txtS3.setBorder(null);
        txtS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtS3ActionPerformed(evt);
            }
        });

        txtS2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtS2.setForeground(new java.awt.Color(51, 51, 51));
        txtS2.setText("00");
        txtS2.setBorder(null);
        txtS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtS2ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("s");

        jLabel21.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("s");

        btnSet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/setTime.png"))); // NOI18N
        btnSet.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSet.setContentAreaFilled(false);
        btnSet.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/setTimeRollover.png"))); // NOI18N
        btnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frameSetTimeLayout = new javax.swing.GroupLayout(frameSetTime.getContentPane());
        frameSetTime.getContentPane().setLayout(frameSetTimeLayout);
        frameSetTimeLayout.setHorizontalGroup(
            frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameSetTimeLayout.createSequentialGroup()
                .addGroup(frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameSetTimeLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(frameSetTimeLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(frameSetTimeLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(35, 35, 35)
                                .addComponent(txtH3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtM3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtS3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(frameSetTimeLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(btnSet)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        frameSetTimeLayout.setVerticalGroup(
            frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameSetTimeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frameSetTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtH3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtM3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtS3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(btnSet)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        btnOnOff.setBackground(new java.awt.Color(255, 255, 255));
        btnOnOff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alarmOff.png"))); // NOI18N
        btnOnOff.setBorderPainted(false);
        btnOnOff.setContentAreaFilled(false);
        btnOnOff.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/onRollover (1).png"))); // NOI18N
        btnOnOff.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnOnOffMouseMoved(evt);
            }
        });
        btnOnOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOnOffActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(85, 157, 176));
        jLabel1.setText("STATUS:");

        timeLabel.setFont(new java.awt.Font("Calibri", 0, 32)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(39, 147, 171));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("00:25:00");

        lblStat.setFont(new java.awt.Font("Calibri", 0, 28)); // NOI18N
        lblStat.setForeground(new java.awt.Color(102, 102, 102));
        lblStat.setText("WORKING");

        btnSetTime.setBackground(new java.awt.Color(102, 102, 102));
        btnSetTime.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnSetTime.setForeground(new java.awt.Color(255, 255, 255));
        btnSetTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/setTime.png"))); // NOI18N
        btnSetTime.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSetTime.setBorderPainted(false);
        btnSetTime.setContentAreaFilled(false);
        btnSetTime.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/setTimeRollover.png"))); // NOI18N
        btnSetTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetTimeActionPerformed(evt);
            }
        });

        lblTom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomatogreen.png"))); // NOI18N
        lblTom.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblWorkFor.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblWorkFor.setForeground(new java.awt.Color(102, 102, 102));
        lblWorkFor.setText("Work for 00:25:00");

        lblRestFor.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblRestFor.setForeground(new java.awt.Color(102, 102, 102));
        lblRestFor.setText("Rest for 00:05:00");

        buttonGroup1.add(btnrain);
        btnrain.setToolTipText("");
        btnrain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rainSoundLight.png"))); // NOI18N
        btnrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrainActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnclassical);
        btnclassical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classicalSoundLight.png"))); // NOI18N
        btnclassical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclassicalActionPerformed(evt);
            }
        });

        btncoffeeshop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coffeeSoundLight.png"))); // NOI18N
        btncoffeeshop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncoffeeshopActionPerformed(evt);
            }
        });

        btnwn.setActionCommand("");
        btnwn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitenoiseSoundLight.png"))); // NOI18N
        btnwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnwnActionPerformed(evt);
            }
        });

        btnnature.setIcon(new javax.swing.ImageIcon(getClass().getResource("/natureSoundLight.png"))); // NOI18N
        btnnature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnatureActionPerformed(evt);
            }
        });

        btnoff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/offSoundLight.png"))); // NOI18N
        btnoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnrain, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnclassical)
                .addGap(18, 18, 18)
                .addComponent(btncoffeeshop)
                .addGap(13, 13, 13)
                .addComponent(btnwn)
                .addGap(18, 18, 18)
                .addComponent(btnnature)
                .addGap(18, 18, 18)
                .addComponent(btnoff)
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(btnOnOff)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblRestFor, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblWorkFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnSetTime))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblStat, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblTom, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnclassical)
                    .addComponent(btncoffeeshop)
                    .addComponent(btnrain)
                    .addComponent(btnwn)
                    .addComponent(btnnature)
                    .addComponent(btnoff))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblStat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSetTime)
                .addGap(26, 26, 26)
                .addComponent(lblTom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOnOff)
                        .addGap(15, 15, 15))
                    .addComponent(lblWorkFor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRestFor)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void offIcon(int lastMusic) {

    }
    private void btnOnOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOnOffActionPerformed
        lblTom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomatogreen.png")));
        alarmTrip = 0;
        if (firstRun == 0) {
            firstRun = 1;
            timer.schedule(new UpdateUITask(), 0, 1000);//make a timer
        }
        if (status == 0) {

            System.out.println("Turning timer on, isWork is " + isWork);
            status = 1;
            btnOnOff.setIcon(onAlarm);
            System.out.println("We are working: " + isWork);
            if (isWork == true) {
                nSeconds = workSec;
                lblStat.setText("WORKING");

            } else {
                nSeconds = restSec;
                lblStat.setText("RESTING");
            }
            totalSec = nSeconds;
            //timer.schedule(new UpdateUITask(), 0, 1000);
        } else {
            System.out.println("Turning timer off, isWork is " + isWork);

            status = 0;
            btnOnOff.setIcon(offAlarm);
        }

    }//GEN-LAST:event_btnOnOffActionPerformed

    private void btnSetTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetTimeActionPerformed
        frameSetTime.setVisible(true);

    }//GEN-LAST:event_btnSetTimeActionPerformed

    private void btnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetActionPerformed
        // TODO add your handling code here:
        int wHours = Integer.parseInt(txtH2.getText());
        int wMin = Integer.parseInt(txtM2.getText());
        int rHours = Integer.parseInt(txtH3.getText());
        int rMin = Integer.parseInt(txtM3.getText());
        String wHr, wMn, rHr, rMn;

        workSec = Integer.parseInt(txtS2.getText()) + wHours * 60 * 60 + wMin * 60;
        restSec = Integer.parseInt(txtS3.getText()) + rHours * 60 * 60 + rMin * 60;

        if (wHours < 10) {
            wHr = "0" + wHours;
        } else {
            wHr = String.valueOf(wHours);
        }
        if (wMin < 10) {
            wMn = "0" + wMin;
        } else {
            wMn = String.valueOf(wMin);
        }
        if (rHours < 10) {
            rHr = "0" + rHours;
        } else {
            rHr = String.valueOf(rHours);
        }
        if (rMin < 10) {
            rMn = "0" + rMin;
        } else {
            rMn = String.valueOf(rMin);
        }
        lblWorkFor.setText("Work for " + wHr + ":" + wMn + ":" + txtS2.getText());
        lblRestFor.setText("Rest for " + rHr + ":" + rMn + ":" + txtS3.getText());

        frameSetTime.setVisible(false);
    }//GEN-LAST:event_btnSetActionPerformed

    private void txtS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtS2ActionPerformed

    private void txtS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtS3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtS3ActionPerformed

    private void txtM3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtM3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtM3ActionPerformed

    private void txtM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtM2ActionPerformed

    private void txtH3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtH3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtH3ActionPerformed

    private void txtH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtH2ActionPerformed

    }//GEN-LAST:event_txtH2ActionPerformed

    private void txtH2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtH2KeyTyped

    }//GEN-LAST:event_txtH2KeyTyped

    private void btnOnOffMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOnOffMouseMoved

    }//GEN-LAST:event_btnOnOffMouseMoved

    private void btnrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrainActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
        if (btnrain.isSelected()) {
            isPlaying = true;
            url = MainFrame.class.getResource("rain.wav");
        }
        if (isPlaying == true) {
            clip = Applet.newAudioClip(url);
            clip.loop();
        }
    }//GEN-LAST:event_btnrainActionPerformed

    private void btnclassicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclassicalActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
        if (btnclassical.isSelected()) {
            isPlaying = true;
            url = MainFrame.class.getResource("Classical.wav");
        }
        if (isPlaying == true) {
            clip = Applet.newAudioClip(url);
            clip.loop();
        }
    }//GEN-LAST:event_btnclassicalActionPerformed

    private void btncoffeeshopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncoffeeshopActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
        if (btncoffeeshop.isSelected()) {
            isPlaying = true;
            url = MainFrame.class.getResource("coffeeshop.wav");
        }
        if (isPlaying == true) {
            clip = Applet.newAudioClip(url);
            clip.loop();
        }
    }//GEN-LAST:event_btncoffeeshopActionPerformed

    private void btnwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnwnActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
        if (btnwn.isSelected()) {
            isPlaying = true;
            url = MainFrame.class.getResource("wn.wav");
        }
        if (isPlaying == true) {
            clip = Applet.newAudioClip(url);
            clip.loop();
        }
    }//GEN-LAST:event_btnwnActionPerformed

    private void btnnatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnatureActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
        if (btnnature.isSelected()) {
            isPlaying = true;
            url = MainFrame.class.getResource("nature.wav");
        }
        if (isPlaying == true) {
            clip = Applet.newAudioClip(url);
            clip.loop();
        }
    }//GEN-LAST:event_btnnatureActionPerformed

    private void btnoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoffActionPerformed
        // TODO add your handling code here:
        if (isPlaying == true) {
            clip.stop();
        }
    }//GEN-LAST:event_btnoffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOnOff;
    private javax.swing.JButton btnSet;
    private javax.swing.JButton btnSetTime;
    private javax.swing.JRadioButton btnclassical;
    private javax.swing.JRadioButton btncoffeeshop;
    private javax.swing.JRadioButton btnnature;
    private javax.swing.JRadioButton btnoff;
    private javax.swing.JRadioButton btnrain;
    private javax.swing.JRadioButton btnwn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFrame frameSetTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel lblRestFor;
    private javax.swing.JLabel lblStat;
    private javax.swing.JLabel lblTom;
    private javax.swing.JLabel lblWorkFor;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField txtH2;
    private javax.swing.JTextField txtH3;
    private javax.swing.JTextField txtM2;
    private javax.swing.JTextField txtM3;
    private javax.swing.JTextField txtS2;
    private javax.swing.JTextField txtS3;
    // End of variables declaration//GEN-END:variables
}
